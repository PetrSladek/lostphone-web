<?php

namespace App\Presenters;

use App\Model\User;
use Kdyby\Doctrine\EntityManager;
use Kdyby\Google\Google;
use Tracy\Debugger;


/**
 * Sign in/out presenters.
 */
class SignPresenter extends BasePresenter
{

    /** @var Google @inject */
    public $google;

    /** @var EntityManager @inject */
    public $em;

    protected $repository;

    protected function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
        $this->repository = $this->em->getRepository( User::getClassName() );
    }


    /** @return \Kdyby\Google\Dialog\LoginDialog */
    protected function createComponentGoogleLogin()
    {
        $dialog = new \Kdyby\Google\Dialog\LoginDialog($this->google);
        $dialog->onResponse[] = function (\Kdyby\Google\Dialog\LoginDialog $dialog) {
            $google = $dialog->getGoogle();

            if (!$google->getUser()) {
                $this->flashMessage("Přihlášení se nezdařilo!", 'danger');
                return;
            }

            /**
             * If we get here, it means that the user was recognized
             * and we can call the Google API
             */

            try {
                $profile = $google->getProfile();;
                if(!$me = $this->repository->findOneBy(['googleEmail'=>$profile->getName()])) {
                    // Register from google
                    $me = new User();
                    $me->setGoogleEmail($profile->getEmail());
                    $me->setName($profile->getName());

                    $this->em->persist($me);
                    $this->em->flush();
                }
//
//                /**
//                 * You should save the access token to database for later usage.
//                 *
//                 * You will need it when you'll want to call Google API,
//                 * when the user is not logged in to your website,
//                 * with the access token in his session.
//                 */
//                $this->usersModel->updateGoogleAccessToken($google->getUser(), $google->getAccessToken());

                /**
                 * Nette\Security\User accepts not only textual credentials,
                 * but even an identity instance!
                 */
                $this->user->login($me->toIdentity());
                /**
                 * You can celebrate now! The user is authenticated :)
                 */

            } catch (\Exception $e) {
                Debugger::log($e, 'google');
                $this->flashMessage("Přihlášení se nezdařilo.", 'danger');
            }

            $this->redirect('Homepage:');
        };

        return $dialog;
    }



	public function actionOut()
	{
		$this->getUser()->logout();
		$this->flashMessage('You have been signed out.');
		$this->redirect('in');
	}

}
