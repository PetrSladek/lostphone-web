<?php

namespace App\Presenters;

use App\Model\Image;
use App\Model\User;
use App\Services\ImageService;
use Kdyby\Doctrine\EntityManager;
use Nette\Application\UI\Presenter;
use Nette\Utils\ArrayHash;


/**
 * Base presenter for all application presenters.
 */
abstract class BasePresenter extends Presenter
{

    /**
     * @var User Prihlaseny uzivatel
     */
    public $me;

    /** @var EntityManager @inject */
    public $em;

    /** @var ImageService @inject */
    public $imageService;

    /** @var ArrayHash */
    public $config;

    protected function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub

        $config = $this->context->parameters;
        $this->config = ArrayHash::from($config);
        $this->template->config = $this->config;

        $this->me = $this->user->isLoggedIn() ? $this->em->getRepository(User::getClassName())->find( $this->user->getId() ) : null;
        $this->template->me = $this->me;

    }

    protected function createTemplate()
    {
        $template =  parent::createTemplate();
        $template->registerHelper('thumb', $this->thumbLink);

        return $template;
    }


    public function thumbLink(Image $entity, $type = 'thumb') {
        try {
            return $this->imageService->getThumbnailUrl($entity->getId(), $entity->getFilename(), $type);
        } catch (\Exception $e) {
            return "#{$e->getMessage()}";
        }
    }





}
